type Query {
    getExamples: [Example]!
    getAllProducts: [Product]!
}

type Mutation {
    createExample(input: CreateExampleInput!): Example!
    createProduct(input: CreateProductInput!): Product!
    deleteAllProducts: Boolean!
}

type Example {
    name: String!
}

input CreateExampleInput {
    name: String!
}

input CreateProductInput {
    name: String!
    price: Int!
    currency: Currency!
    featured: Boolean!
    category: String!
    image: ImageInput!
    details: [DetailsInput!]
}

input DetailsInput {
    weight: Int!
    thickness: Int!
    descriptions: Int!
}

input ImageInput {
    src: String!
    alt: String!
}

type Product {
    name: String!
    price: Int!
    currency: Currency!
    featured: Boolean!
    category: String!
    image: Image!
    details: Details
}

type Details {
    weight: Int!
    thickness: Int!
    description: String!
    recommendations: [Image!]!
}

type Image {
    src: String!
    alt: String!
}

enum Category {
    GLASS
    STEEL
    PLASTIC
}

enum Currency {
    USD
    EUR
}
